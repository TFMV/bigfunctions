type: function_py
author: Paul Marcombes
description: |
  GET Google Trends data
  using [pytrends python library](https://github.com/GeneralMills/pytrends).

  Parameters used in this function are passed as is to pytrends. Refer to [pytrends documentation](https://github.com/GeneralMills/pytrends).
arguments:
  - name: keywords
    type: string
  - name: category
    type: int64
  - name: timeframe
    type: string
  - name: geo
    type: string
  - name: gprop
    type: string
output:
  name: trends
  type: json
examples:
  - description: "GET trends for chaise and fauteuil"
    arguments:
      - "'chaise, fauteuil'"
      - "11"
      - "'2025-01-01 2025-01-07'"
      - "'FR'"
      - "null"
    output: |
      [
        {"date":"2019-12-01T00:00:00", "chaise":58, "fauteuils":2, "isPartial":false},
        {"date":"2019-12-08T00:00:00", "chaise":57, "fauteuils":1, "isPartial":false},
        ...
      ]
code: | #python
  import time
  import random
  from pytrends.request import TrendReq, exceptions
  import pandas as pd

  if not keywords:
    return []

  keywords = [kw.strip() for kw in keywords.split(',')]
  gprop = gprop or ''
  timeframe = timeframe or 'today 5-y'

  pytrends = TrendReq(hl='en-US', tz=360, retries=20)
  pytrends.build_payload(keywords, cat=category, timeframe=timeframe, geo=geo, gprop=gprop)

  try:
    df = pytrends.interest_over_time()
  except exceptions.TooManyRequestsError:
    return []
  except exceptions.ResponseError as e:
    assert False, str(e)

  df = df.reset_index()
  df = df.loc[~df['isPartial']]
  df['date'] = df['date'].map(lambda date: date.strftime('%Y-%m-%d'))
  df = pd.melt(df, id_vars=['date'], value_vars=keywords, var_name='key')

  return df.to_dict(orient='records')
requirements: |
  urllib3<2
  pytrends
max_batching_rows: 1
cloud_run:
  concurrency: 1
